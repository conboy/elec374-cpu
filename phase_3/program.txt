ldi R2, 0x69 ; R2 = 0x69 
00001_0010_0000_0000000000001101001
09000069

ldi R2, 2(R2) ; R2 = 0x6B
00001_0010_0010_0000000000000000010
09100002

ld R1, 0x47 ; R1 = (0x47) = 0x94
00000_0001_0000_0000000000001000111
00800047

ldi R1, 1(R1) ; R1 = 0x95
00001_0001_0001_0000000000000000001
08880001

ld R0, -7(R1) ; R0 = (0x8E) = 0x34
00000_0000_0001_1111111111111111001
000FFFF9

ldi R3, 3 ; R3 = 3
00001_0011_0000_0000000000000000011
09800003

ldi R2, 0x43 ; R2 = 0x43
00001_0010_0000_0000000000001000011
09000043

brmi R2, 3 ; continue with the next instruction (will not branch)
10011_0010_0011_0000000000000000000
99180000

ldi R2, 6(R2) ; R2 = 0x49
00001_0010_0010_0000000000000000110
09100006


ld R7, -2(R2) ; R7 = (0x49 - 2) = 0x94
00000_0111_0010_1111111111111111110
0397FFFE

nop
11010_0000_0000_0000000000000000000
D0000000

brpl R7, 2 ; continue with the instruction at “target” (will branch)
10011_0111_0010_0000000000000000010
9B900002

ldi R5, 4(R2) ; this instruction will not execute
00001_0101_0010_0000000000000000100
0A900004

ldi R4, -3(R5) ; this instruction will not execute
00001_0100_0101_1111111111111111101
0A2FFFFD

target: add R2, R2, R3 ; R2 = 0x4C
00011_0010_0010_0011_000000000000000
19118000

addi R7, R7, 3 ; R7 = 0x97
01100_0111_0111_0000000000000000011
63B80003

neg R7, R7 ; R7 = 0xFFFFFF69
10001_0111_0111_0000000000000000000
8BB80000

not R7, R7 ; R7 = 0x96
10010_0111_0111_0000000000000000000
93B80000

andi R7, R7, 0xF ; R7 = 6
01101_0111_0111_0000000000000001111
6BB8000F

ror R1, R0, R3 ; R1 = 0x80000006
01000_0001_0000_0011_000000000000000
40818000

ori R7, R1, 9 ; R7 = 0x8000000F
01110_0111_0001_0000000000000001001
73880009

shra R1, R7, R3 ; R1 = 0xF0000001
00110_0001_0111_0011_000000000000000
30B98000

shr R2, R2, R3 ; R2 = 9
00101_0010_0010_0011_000000000000000
29118000

st 0x8E, R2 ; (0x8E) = 9 new value in memory with address 0x8E
